# https://taskfile.dev

version: '3'

vars:
  PYTHON_VERSION: '3.10.3'

tasks:

  install:
    desc: Install all dependencies
    cmds: 
      - task: install:python
      - task: install:poetry
      - task: install:npm

  install:python:
    desc: Install pyenv & Python v. {{.PYTHON_VERSION}}
    cmds:
      - curl https://pyenv.run | bash
      - pyenv install -v {{.PYTHON_VERSION}}
      - python3 --version

  install:poetry:
    desc: Install poetry
    cmds:
      - curl -sSL https://install.python-poetry.org | python3 -
      - poetry --version

  install:npm:
    desc: Install npm, NodeJS, npx
    cmds:
      - sudo apt update
      - sudo apt install npm
      - npm install -g node
      - npm install -g npx 
      - npm -v
      - node -v
      - npx -v

  infra:
    desc: Spin up infra
    cmds: 
      - echo "Starting docker containers..."
      - docker compose up -d postgres pgadmin

  infra:down:
    desc: Tear down infra
    cmds: 
      - echo "Stopping docker containers..."
      - docker compose down

  mankkoo:dev:
    desc: Run mankkoo core backend in a dev mode
    dir: services/mankkoo/mankkoo
    cmds:
      - task: infra
      - echo "Starting mankkoo core..."
      - flask run --reload

  mankkoo:test:
    desc: Run tests for mankkoo core
    dir: services/mankkoo
    cmds:
      - echo "Running tests for mankkoo core..."
      - pytest -s -vv --cov=./mankkoo
      # uncomment below step to run a single test file
      # - pytest -s -vv --cov=./mankkoo tests/controller/stream_controller_test.py

  update:
    desc: Update dependencies for all services
    cmds:
      - task: mankkoo:update

  mankkoo:update:
    desc: Update dependencies for mankkoo core
    dir: services/mankkoo
    cmds:
      - echo "Updating dependencies for mankkoo core..."
      - poetry update

  mankkoo:req:
    desc: Generate requirements.txt file from Poetry
    dir: services/mankkoo
    cmds:
      - echo "Generate requirements.txt file..."
      - poetry export --without-hashes --format=requirements.txt > requirements.txt

  mankkoo:lint:
    desc: Run linter
    dir: services/mankkoo
    cmds:
      - echo "Linting mankkoo core..."
      - autoflake --in-place --remove-all-unused-imports --remove-unused-variables --ignore-init-module-imports -r .
      - isort .
      - autopep8 --in-place --aggressive --recursive .
      - black .

  ui:dev:
    desc: Run mankkoo UI in a dev mode
    dir: services/mankkoo-ui
    cmds:
      - echo "Starting mankkoo UI..."
      - npm run dev --turbo

  ui:build:
    desc: Build UI 
    dir: services/mankkoo-ui
    cmds:
      - echo "Starting building UI..."
      - npm run build

  test:
    desc: Run all tests
    cmds:
      - task: mankkoo:test

  backup:
    desc: Create PostgreSQL backup (all in Docker)
    vars:
      db: mankkoo
    cmds:
      - echo "Starting backuping '{{.db}}' database..."
      - docker cp services/infra/postgres/backup_db.sh postgres:/tmp/backup_db.sh
      - docker exec postgres chmod +x /tmp/backup_db.sh
      - |
        backup_file=$(docker exec postgres /bin/bash -c "/tmp/backup_db.sh {{.db}}") && \
        docker cp postgres:/tmp/$backup_file backup/$backup_file && \
        docker exec postgres /bin/bash -c "rm /tmp/$backup_file /tmp/backup_db.sh"
      - echo "Backup for '{{.db}}' database completed."

  restore:
    desc: Restoring backup data for PostgreSQL
    vars:
      file: mankkoo_20250616_1830
      db: test
    cmds:
      - echo "Starting restoring '{{.db}}' database. Copying backup..."
      - docker cp backup/{{.file}}.dump.gz postgres:/tmp/{{.file}}.dump.gz
      - docker cp services/infra/postgres/restore_db.sh postgres:/tmp/restore_db.sh
      - docker exec postgres chmod +x /tmp/restore_db.sh
      - docker exec postgres /bin/bash -c "/tmp/restore_db.sh {{.file}} {{.db}}"
      - docker exec postgres /bin/bash -c "rm /tmp/restore_db.sh"
      - echo "Backup restored."